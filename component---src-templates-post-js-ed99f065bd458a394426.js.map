{"version":3,"sources":["webpack:///./src/components/sideDrawer.js","webpack:///./src/components/burgerMenuToggler.js","webpack:///./src/layouts/postsLayout.js","webpack:///./src/templates/post.js"],"names":["SideDrawer","width","isOpen","items","sideDrawerStyles","styles","sidebar","open","className","join","style","sidebarList","map","i","key","title","to","path","activeClassName","BurgerMenuToggler","active","onToggle","burgerClassNames","burger","burgerContainer","onClick","PostsLayout","children","useState","sideDrawerVisibility","setSideDrawerVisibility","sideDrawerItems","allMarkdownRemark","edges","item","node","frontmatter","sideDrawerClassNames","toggler","allowCollapse","text","partial","Toggler","Template","markdownRemark","data","html","date","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"iKAqBeA,EAjBI,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC/BC,EAAmB,CAACC,IAAOC,QAAUJ,EAASG,IAAOE,KAAO,IAChE,OACE,2BAAOC,UAAWJ,EAAiBK,KAAK,KAAMC,MAAO,CAAET,UACrD,wBAAIO,UAAWH,IAAOM,aACnBR,EAAMS,KAAI,SAAAC,GAAC,OACV,wBAAIC,IAAKD,EAAEE,MAAOP,UAAU,aAC1B,kBAAC,OAAD,CAAMQ,GAAIH,EAAEI,KAAMC,gBAAgB,gBAC/BL,EAAEE,c,kBCAFI,EATW,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC/BC,EAAmB,CAACjB,IAAOkB,OAASH,EAASf,IAAOe,OAAS,IACjE,OACE,yBAAKZ,UAAWH,IAAOmB,gBAAiBC,QAASJ,GAC/C,yBAAKb,UAAWc,EAAiBb,KAAK,SCoD7BiB,G,OApDK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACkBC,oBAAS,GAA1DC,EAD+B,KACTC,EADS,KAgBhCC,EAdI,OAcmBC,kBAAkBC,MAAMrB,KAAI,SAAAC,GACrD,IAAIqB,EAAO,GAD+C,EAElBrB,EAAEsB,KAAKC,YAC/C,OADSF,EAAKnB,MAF4C,EAExDA,MAAyBmB,EAAKjB,KAF0B,EAErCA,KACdiB,KAOLG,EAAuB,CAAC,OAAQ,OAAQ,OAAQ,OAASR,EAAuB,eAAiB,IAEjGS,EAAW,kBAAC,EAAD,CACXlB,OAAQS,EACRR,SAAU,kBAAMS,GAAyBD,MAG7C,OACE,oCACE,kBAAC,IAAD,CACEU,eAAe,EACfpC,MAfY,CAChB,CAAEqC,KAAM,cAAexB,GAAI,KAC3B,CAAEwB,KAAM,iBAAkBxB,GAAI,UAAWyB,SAAS,IAc9CC,QAASJ,IAEX,kBAAC,EAAD,CACErC,MAAM,QACNC,OAAQ2B,EACR1B,MAAO4B,IAET,yBAAKvB,UAAW6B,EAAqB5B,KAAK,MACvCkB,M,SChDM,SAASgB,EAAT,GAA6B,IAClCC,EADiC,EAARC,KACzBD,eACAR,EAAsBQ,EAAtBR,YAAaU,EAASF,EAATE,KACrB,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAK/B,MAAOqB,EAAYrB,QAExB,4BAAKqB,EAAYrB,OACjB,4BAAKqB,EAAYW,MACjB,yBACEvC,UAAU,oBACVwC,wBAAyB,CAAEC,OAAQH,MAhB3C,kFAqBO,IAAMI,EAAS,a","file":"component---src-templates-post-js-ed99f065bd458a394426.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'gatsby'\r\nimport styles from './sideDrawer.module.scss'\r\n\r\nconst SideDrawer = ({ width, isOpen, items }) => {\r\n  let sideDrawerStyles = [styles.sidebar, (isOpen ? styles.open : '')]\r\n  return (\r\n    <aside className={sideDrawerStyles.join(\" \")} style={{ width }}>\r\n      <ul className={styles.sidebarList}>\r\n        {items.map(i => (\r\n          <li key={i.title} className=\"mb-4 pl-1\">\r\n            <Link to={i.path} activeClassName=\"text-primary\">\r\n              {i.title}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default SideDrawer;","import React from 'react'\r\nimport styles from './burgerMenuToggler.module.scss'\r\n\r\nconst BurgerMenuToggler = ({ active, onToggle }) => {\r\n  let burgerClassNames = [styles.burger, (active ? styles.active : '')]\r\n  return (\r\n    <div className={styles.burgerContainer} onClick={onToggle}>\r\n      <div className={burgerClassNames.join(\" \")}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BurgerMenuToggler;","import React, {useState} from 'react'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport Navbar from \"src/components/navbar\"\r\nimport SideDrawer from \"src/components/sideDrawer\"\r\nimport BurgerMenuToggler from \"src/components/burgerMenuToggler\"\r\nimport \"./layout.scss\"\r\n\r\nconst PostsLayout = ({ children }) => {\r\n  let [sideDrawerVisibility, setSideDrawerVisibility] = useState(true);\r\n  let data = useStaticQuery(graphql`\r\n    query {\r\n      allMarkdownRemark(sort: {order: ASC, fields: frontmatter___order}) {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              title\r\n              path\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  let sideDrawerItems = data.allMarkdownRemark.edges.map(i => {\r\n    let item = {};\r\n    ({title: item.title, path: item.path} = i.node.frontmatter);\r\n    return item;\r\n  });\r\n\r\n  let navbarItems = [\r\n    { text: 'درباره دوره', to: '/' },\r\n    { text: 'سرفصل‌های دوره', to: '/topics', partial: true },\r\n  ];\r\n  let sideDrawerClassNames = ['main', 'mt-5', 'pt-5', 'px-5', (sideDrawerVisibility ? 'with-sidebar' : '')];\r\n\r\n  let toggler = (<BurgerMenuToggler\r\n      active={sideDrawerVisibility}\r\n      onToggle={() => setSideDrawerVisibility(!sideDrawerVisibility)}\r\n    ></BurgerMenuToggler>)\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        allowCollapse={false}\r\n        items={navbarItems}\r\n        Toggler={toggler}\r\n      ></Navbar>\r\n      <SideDrawer\r\n        width=\"350px\"\r\n        isOpen={sideDrawerVisibility}\r\n        items={sideDrawerItems}\r\n      ></SideDrawer>\r\n      <div className={sideDrawerClassNames.join(' ')}>\r\n        {children}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostsLayout;","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport PostsLayout from 'src/layouts/postsLayout'\r\nimport SEO from \"src/components/seo\"\r\n\r\nexport default function Template({ data }) {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html } = markdownRemark\r\n  return (\r\n    <PostsLayout>\r\n      <SEO title={frontmatter.title}></SEO>\r\n\r\n      <h1>{frontmatter.title}</h1>\r\n      <h2>{frontmatter.date}</h2>\r\n      <div\r\n        className=\"blog-post-content\"\r\n        dangerouslySetInnerHTML={{ __html: html }}\r\n      />\r\n    </PostsLayout>\r\n  )\r\n}\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter {\r\n        path\r\n        title\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}