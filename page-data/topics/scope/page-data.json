{"componentChunkName":"component---src-templates-post-js","path":"/topics/scope","webpackCompilationHash":"7a2404787530c2669fe9","result":{"data":{"markdownRemark":{"html":"<hr>\n<br/>\n<p>توی همه‌ی زبان‌هایی که ما باهاشون سروکار داریم، قابلیت ذخیره سازی و دسترسی به متغیرها وجود داره و معمولا خیلی راحت متغیر می‌سازیم و از آنها استفاده می‌کنیم. </p>\n<p>اما طبق معمول به خاطر استثنا‌ها و رفتارهای غیرمعمولی که در جاوااسکریپت وجود داره مجبوریم خیلی دقیق‌تر این مکانیزم رو یاد بگیریم!</p>\n<br/>\nپس تو این جلسه روی مفاهیم مرتبط با Scope و کاربردشون عمیق می‌شیم: \n<br/>\n<ul>\n<li>چرا توی جاوااسکریپت قبل از تعریف یه متغیر بهش دسترسی داریم؟ :)</li>\n<li>مفهوم closure چیه و چه کاربردهایی داره و کجا می‌تونیم ازش استفاده کنیم</li>\n<li>انجین جاوااسکریپت چطور متغیرها رو میسازه و چه جاهایی بهشون دسترسی داریم</li>\n<li>...</li>\n</ul>","frontmatter":{"path":"/topics/scope","title":"نحوه کارکرد scope و مفاهیم lexical scope, Hoisting و Closure"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}